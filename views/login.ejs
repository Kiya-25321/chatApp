<!DOCTYPE html>
<html land="en">
<head>
    <meta charset="UTF-8">
    <meta http-equiv="X-UA-Compatible" content="IE=edge">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Login Page</title>
	<style>
		body {
background: #14213D;
			font-family: sans-serif;
			display: flex;
			justify-content: center;

		}

		#container {
			background: #e5e5e5;
			width: 28%;
			height: 100%;
			padding: 2%;
			margin-top: 70px;
			border: 2px solid #FCA311;
			border-radius: 15px;
		}

		.input-field {
			width: 100%;
			margin-top: 20px;
			margin-bottom: 20px;

		}

		.line {
			margin: 10px 10px 0px 10px;
			width: 90%;
			height: 1px;
			background: #0000005e;


		}


		.input-field input {
			margin-top: 5px;
			width: 100%;
			height: 30px;
			border: 1px solid #14213D;
			outline: none;
		}

		.input-field button {
			background: #FCA311;
		width: 100%;
			border-radius: 100px;
			border: none;
			color: #14213D;
			padding: 10px 20px;
			text-align: center;
			text-decoration: none;
			cursor: pointer;
			outline: none;

		}



		.error-msg {
			color: red;
		}
	</style>
</head>
<body>
	<div id="container">
  		<form>
    		<div class="input-field">
      			<label><%= "Mobile :" %></label>
      			<input type="text" id="mobile"/>
    		</div>
    		<div class="input-field">
      			<label><%= "Password :" %></label>
      			<input type="password" id="password"/>
    		</div>
			<div class="input-field">
				<button type="submit" id="register-btn" disabled>
					<%= registerBtn %>
				</button>
				<div style="display: flex; justify-content: center;">
					<div class="line"> </div>
				</div>
				<div style="display: flex; justify-content: center;">
					<p>if you have account</p>
				</div>
				<button type="button" id="login-btn">
					<%= loginBtn %>
				</button>
			</div>
    		<div class="error-msg" id="error-msg"></div>
  		</form>
	</div>
	<script>
		let mobile = document.getElementById('mobile');
		let password = document.getElementById('password');
		let loginBtn = document.getElementById('login-btn');
		let registerButton = document.getElementById('register-button');
		let errorMsg = document.getElementById('error-msg');

		mobile.addEventListener('input', () => {
			if (mobile.value.length == 11) {
				if (password.value.length > 0) {
					loginBtn.disabled = false;
				}
			} else {
				loginBtn.disabled = true;
			}
		});

		password.addEventListener('input', () => {
			if (password.value.length > 0) {
				if (mobile.value.length == 11) {
					loginBtn.disabled = false;
				}
			} else {
				loginBtn.disabled = true;
			}
		});

		registerButton.addEventListener('click', (e) => {
			e.preventDefault();
			location.href = '<%= "http://localhost:3000/signup" %>';
		});


		let ws = new WebSocket('ws://localhost:8080');
		let token;

		loginBtn.addEventListener('click', (e) => {
			e.preventDefault();

			let data = {
				mobile: mobile.value,
				password: password.value,
				action: "login"
			};
			ws.send(JSON.stringify(data));
		});


		function jwt_decode(token) {
			let base64Url = token.split('.')[1];
			let base64 = base64Url.replace(/-/g, '+').replace(/_/g, '/');
			let jsonPayload = decodeURIComponent(atob(base64).split('').map(function (c) {
				return '%' + ('00' + c.charCodeAt(0).toString(16)).slice(-2);
			}).join(''));

			return JSON.parse(jsonPayload);
		};


		ws.onmessage = (msg) => {
			let data = JSON.parse(msg.data);	

			switch(data.action) {
				case "falseLogin":
				errorMsg.innerHTML = 'mobile or password incorrect!';
				break;

				case "token":
					token = data.token;
					// for verify client.	
					let justToken = {
						token: token,
						action: "jwtVerify"
					}
					
					ws.send(JSON.stringify(justToken));	
				break;

				case "jwt":
					
					if (data.result === 'false') {
						errorMsg.innerHTML = 'mobile or password incorrect!';
					} else if (data.result === 'true') {
						try {
						document.cookie = "token=" + token;
						let data = jwt_decode(token);
						location.href = `<%= "http://localhost:3000/messaging/"%>`;
						} catch (err) {
						console.log(err);
						}
					}
				break;
			}
		}
	</script>
</body>
</html>
